- stat: path=/tmp/gentoo_mounted
  register: gentoo_is_mounted
  tags:
    - storage

- stat: path=/tmp/boot_mounted
  register: boot_is_mounted
  tags:
    - storage

- stat: path=/tmp/sgdisk_is_done
  register: sgdisk_is_done
  tags:
    - storage

- name: Create Partition
  command: "sgdisk {{ main_disk }} {{ item }}"
  when: sgdisk_is_done.stat.exists == False
  with_items:
    - -n 1:0:+128M -t 1:8300 -c 1:linux-boot
    - -n 2:0:+32M  -t 2:ef02 -c 2:bios-boot
    - -n 3:0:+8G   -t 3:8200 -c 3:swap
    - -n 4:0:0     -t 4:8300 -c 4:linux-root

- command: touch /tmp/sgdisk_is_done

- name: Format BIOS Partition
  filesystem: "fstype=ext4 dev={{ main_disk }}1 force={{ force_format }}"
  tags:
    - storage

- name: Format Swap Partition
  command: mkswap {{ main_disk }}3

- name: Format Root Partition
  filesystem: "fstype={{ fstype }} dev={{ main_disk }}4 force={{ force_format }}"
  tags:
    - storage

- name: Create Root Mount Directory
  file: path=/mnt/gentoo state=directory
  tags:
    - storage

- name: Mount Root Directory
  mount:
    name: /mnt/gentoo
    src: "{{ main_disk }}4"
    fstype: "{{ fstype }}"
    state: mounted
  tags:
    - storage

- name: Mount Boot Directory
  mount:
    name: /mnt/gentoo/boot
    src: "{{ main_disk }}1"
    fstype: ext4
    state: mounted
  tags:
    - storage

    #- name: Create Root Mount
    #  command: "{{item}} creates=/tmp/gentoo_mounted"
    #  with_items:
    #      - mkdir -p /mnt/gentoo
    #      - mount {{ main_disk }}3 /mnt/gentoo
    #      - touch /tmp/gentoo_mounted
    #  tags:
    #    - storage
    #
    #- name: Create Boot Mount
    #  command: "{{item}} creates=/tmp/boot_mounted"
    #  with_items: 
    #      - mkdir -p /mnt/gentoo/boot
    #      - mount {{ main_disk }}1 /mnt/gentoo/boot
    #      - touch /tmp/boot_mounted
    #  tags:
    #    - storage
